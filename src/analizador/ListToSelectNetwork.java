/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package analizador;


import java.net.InetAddress;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;

/**
 *
 * @author Gregorio
 */
public class ListToSelectNetwork extends javax.swing.JDialog {
    private NetworkInterface [] networkList;
    private NetworkInterfaceSelect networkSelected;
    private DefaultListModel listNetwork;
    
    /**
     * Creates new form ListToSelectNetwork
     */
    public ListToSelectNetwork(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        networkSelected = new NetworkInterfaceSelect();
        networkList = JpcapCaptor.getDeviceList();
        listNetwork = new DefaultListModel();
        for(int i=0; i<networkList.length; ++i)
        {
            /*Mirar si puedes acceder al nombre del servicio para que no muestre el registro 
            * puede ser una soluciÃ³n mirar cual esta conectado para, y una vez seleccionado comparar, para que no existan muchos
            * servicios
            */
            listNetwork.addElement("Name: " + networkList[i].name + " Description: " + networkList[i].description);
//            if (networkList[i].addresses[1].address != null || networkList[i].addresses[0] != null){
//                listNetwork.addElement("Name: " + networkList[i].name + " Description: " + networkList[i].description + 
//                " Is connected, address IPv4:  " + networkList[i].addresses[1].address);
//                
//                System.out.println(networkList[i].addresses[1].address.getCanonicalHostName());
//                System.out.println(networkList[i].addresses[1].broadcast);
//                System.out.println(networkList[i].addresses[1].destination);
//                System.out.println(networkList[i].addresses[1].subnet);
//            } else {
//                listNetwork.addElement("Name: " + networkList[i].name + " Description: " + networkList[i].description + " Data link: "
//                + networkList[i].addresses[0]);
//                System.out.println(networkList[i].addresses[0].address);
//            }
        }
        jList2.setModel(listNetwork);
        jList2.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAccept = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonAccept.setText("Accept");
        jButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addComponent(jButtonCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAccept)
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAccept)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptActionPerformed
        // TODO add your handling code here:
        if (jList2.getSelectedIndex() != -1)
        {
            networkSelected.setElement(networkList[jList2.getSelectedIndex()]);
            this.setVisible(false);
        } else {
            ErrorMessage error = new ErrorMessage(null, true);
            error.setMessage("You haven't select network to sniffing");
            ImageIcon iconMessage = new ImageIcon(getClass().getResource("/analizador/images/error.png"));
            error.setIcon(iconMessage);
            error.setVisible(true);
        }
    }//GEN-LAST:event_jButtonAcceptActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed
 
    public NetworkInterfaceSelect getNetworkSelected() { return networkSelected; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListToSelectNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListToSelectNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListToSelectNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListToSelectNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListToSelectNetwork dialog = new ListToSelectNetwork(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAccept;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
